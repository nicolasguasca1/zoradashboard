/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomNumberConsumer,
  RandomNumberConsumerInterface,
} from "../RandomNumberConsumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5073dd3782915140c8f3b190b5d67eac6dc5760c46e973a36085f69e2889c224210f603d836748e7dc00888173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050507f6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f460001b60018190555067016345785d8a000060028190555060805160601c60a05160601c61098f61011c6000396000818160a6015261028d0152600081816101470152610251015261098f6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806342619f661461004657806394985ddd14610064578063dbdff2c114610080575b600080fd5b61004e61009e565b60405161005b9190610725565b60405180910390f35b61007e60048036038101906100799190610498565b6100a4565b005b610088610140565b604051610095919061065c565b60405180910390f35b60035481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990610705565b60405180910390fd5b61013c8282610242565b5050565b60006002547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161019e9190610603565b60206040518083038186803b1580156101b657600080fd5b505afa1580156101ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ee91906104d4565b101561022f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610226906106e5565b60405180910390fd5b61023d60015460025461024d565b905090565b806003819055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016102c1929190610677565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016102ee9392919061061e565b602060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610340919061046f565b50600061036284600030600080898152602001908152602001600020546103ac565b9050600160008086815260200190815260200160002054610383919061076d565b600080868152602001908152602001600020819055506103a384826103e8565b91505092915050565b6000848484846040516020016103c594939291906106a0565b6040516020818303038152906040528051906020012060001c9050949350505050565b600082826040516020016103fd9291906105d7565b60405160208183030381529060405280519060200120905092915050565b60008151905061042a81610914565b92915050565b60008135905061043f8161092b565b92915050565b60008135905061045481610942565b92915050565b60008151905061046981610942565b92915050565b60006020828403121561048157600080fd5b600061048f8482850161041b565b91505092915050565b600080604083850312156104ab57600080fd5b60006104b985828601610430565b92505060206104ca85828601610445565b9150509250929050565b6000602082840312156104e657600080fd5b60006104f48482850161045a565b91505092915050565b610506816107c3565b82525050565b610515816107e1565b82525050565b61052c610527826107e1565b610848565b82525050565b600061053d82610740565b610547818561074b565b9350610557818560208601610815565b6105608161088b565b840191505092915050565b6000610578602b8361075c565b91506105838261089c565b604082019050919050565b600061059b601f8361075c565b91506105a6826108eb565b602082019050919050565b6105ba8161080b565b82525050565b6105d16105cc8261080b565b610852565b82525050565b60006105e3828561051b565b6020820191506105f382846105c0565b6020820191508190509392505050565b600060208201905061061860008301846104fd565b92915050565b600060608201905061063360008301866104fd565b61064060208301856105b1565b81810360408301526106528184610532565b9050949350505050565b6000602082019050610671600083018461050c565b92915050565b600060408201905061068c600083018561050c565b61069960208301846105b1565b9392505050565b60006080820190506106b5600083018761050c565b6106c260208301866105b1565b6106cf60408301856104fd565b6106dc60608301846105b1565b95945050505050565b600060208201905081810360008301526106fe8161056b565b9050919050565b6000602082019050818103600083015261071e8161058e565b9050919050565b600060208201905061073a60008301846105b1565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006107788261080b565b91506107838361080b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107b8576107b761085c565b5b828201905092915050565b60006107ce826107eb565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610833578082015181840152602081019050610818565b83811115610842576000848401525b50505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060008201527f7769746820666175636574000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b61091d816107d5565b811461092857600080fd5b50565b610934816107e1565b811461093f57600080fd5b50565b61094b8161080b565b811461095657600080fd5b5056fea2646970667358221220bc315d7c140d70f77af57a105a7dfee7772708fb76fdf08b3bd6286ed2d15de064736f6c63430008040033";

type RandomNumberConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberConsumer__factory extends ContractFactory {
  constructor(...args: RandomNumberConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomNumberConsumer> {
    return super.deploy(overrides || {}) as Promise<RandomNumberConsumer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RandomNumberConsumer {
    return super.attach(address) as RandomNumberConsumer;
  }
  connect(signer: Signer): RandomNumberConsumer__factory {
    return super.connect(signer) as RandomNumberConsumer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberConsumerInterface {
    return new utils.Interface(_abi) as RandomNumberConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberConsumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberConsumer;
  }
}
